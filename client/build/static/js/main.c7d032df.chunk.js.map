{"version":3,"sources":["store/store.tsx","services/socketService.ts","components/elements/Token/Token.tsx","utils/gameLogic.ts","routes/PrivacyPolicy.tsx","services/gameService.ts","components/elements/Board/Board.tsx","services/roomService.ts","utils/helper.ts","components/elements/Button/Button.tsx","components/features/ShareInfo/ShareInfo.tsx","components/features/StatusBox/StatusBox.tsx","components/features/PlayerInfoBox/Box/Box.tsx","components/features/PlayerInfoBox/PlayerInfoBox.tsx","components/features/PlayedTokens/PlayedTokens.tsx","components/features/Fields/Fields.tsx","utils/computerPlayer.ts","components/features/Game/Game.tsx","components/elements/Input/Input.tsx","components/features/Start/Start.tsx","components/elements/Collapsible/Collapsible.tsx","components/features/Main/Main.tsx","App.tsx","constants/constants.tsx","index.tsx","components/features/StatusBox/StatusBox.module.scss","components/features/Fields/Fields.module.scss","components/features/Start/Start.module.scss","components/elements/Collapsible/Collapsible.module.scss","components/features/Main/Main.module.scss","components/features/PlayerInfoBox/Box/Box.module.scss","components/elements/Token/Token.module.scss","components/features/ShareInfo/ShareInfo.module.scss","components/features/PlayedTokens/PlayedTokens.module.scss","App.module.scss","components/features/Game/Game.module.scss","components/features/PlayerInfoBox/PlayerInfoBox.module.scss","components/elements/Button/Button.module.scss","components/elements/Input/Input.module.scss"],"names":["PLAYER","PHASE","socket","url","Promise","rs","rj","io","on","err","Token","color","emoji","size","className","styles","token","xmlns","width","height","viewBox","octagon","style","fill","d","fontSize","coordinateExistsInSet","coordinate","set","Array","from","some","value","x","y","getAdjacentFields","betweenIndices","num","nonDiagonalCoordinates","Set","filter","a","b","initMatrix","useStore","create","get","me","undefined","opponent","room","setRoom","newRoom","gameFinished","setGameFinished","isFinished","activePlayer","ZERO","setActivePlayer","playerId","setOpponent","player","setMe","winner","winningFields","adjacentFields","setAdjacentFields","setWinningFields","phase","SET","setPhase","setActivated","activated","produce","state","matrix","updateMatrix","toBeRemoved","newMatrix","map","arr","slice","winnerInfo","checkWinning","playedTokens","nonPlayedTokens","ONE","playToken","prevValue","getPlayerById","element","symbol","position","nPlTokens","Object","values","every","length","MOVE","plTokens","id","find","increaseScore","score","takeTurn","turn","newCoordinate","prevCoordinate","resetActiveGameButKeepRoom","PrivacyPolicy","maxWidth","href","GameService","emit","listener","Board","shapeRendering","textRendering","rx","ry","transform","stroke","strokeWidth","strokeLinecap","x1","y1","x2","y2","RoomService","joinInfo","roomInfo","error","gameMaster","roomId","playerName","getRandomColor","i","Math","floor","random","emojis","getRandomEmoji","Button","props","classnames","button","ShareInfo","container","shareInfo","shareButton","onClick","str","navigator","share","title","text","window","location","catch","clipboard","writeText","reject","then","toast","icon","duration","alert","fillRule","clipRule","isComputer","StatusBox","reactivate","playAgainButton","playAgain","row","statusBox","statusInfo","winningText","pulse","options","loop","autoplay","animationData","pop","rendererSettings","preserveAspectRatio","phaseInfo","Box","name","playerBox","head","index","PlayerInfoBox","playerInfo","PlayedTokens","tokenWrapper","Fields","useState","setPrevCoordinate","turnFinished","socketService","gameService","isFieldEnabled","emptyAdjacentFields","isFieldActive","fields","tokensWrapper","field","winningField","activeField","selectedField","handleFieldClick","disabled","columns","diagonals","getComputerTurnInSetPhase","winCoordinate","makeComputerWinSetPhase","preventCoordinate","preventPlayerFromWinningSetPhase","getRandomNullCoordinate","hasCoordinateAdjacentTokensNotInLine","coordinateToCheck","line","playerToCheck","possibleWinToken","c","makeComputerWinMovePhase","possibleWins","getPossibleWins","nullCoordinate","preventPlayerFromWinningMovePhase","possibleDefeats","preventDefeatToken","makeRandomNotDangerousMove","computerTokensWithEmptyAdjacentFields","getCoordinatesWithValue","possibleTokensWithoutDangerousTokens","playerCanMoveToThisCoordinate","coordinateHasTwoOtherValuesOfSameIdInLine","tokensToChooseFrom","flatMap","rows","nullCoordinates","nonNullCoordinates","forEach","push","result","columnValues","lineHasTwoValuesOfIdAndOneNullValue","findIndex","rowValues","diagonal","existingValuesInLine","has","checkOtherValuesInLine","otherId","otherValuesInLine","column","Game","listenersAttached","setListenersAttached","useEffect","setTimeout","winTurn","getComputerTurnInMovePhase","roomService","onOpponentJoined","onOpponentLeft","onTurnFinished","onReactivate","game","board","Input","input","Start","setColor","roomName","setRoomName","isCreating","setIsCreating","pickerOpen","setPickerOpen","chosenEmoji","setChosenEmoji","URLSearchParams","search","start","ownPlayer","socketId","joinGameRoom","createGameRoom","centerColumn","buttonRow","styleButton","type","onChange","e","target","onEmojiClick","event","pickerStyle","boxShadow","borderRadius","top","marginTop","disableSearchBar","native","joinSection","maxLength","placeholder","Collapsible","open","children","header","isOpen","setIsOpen","setHeight","ref","useRef","resizeObserver","ResizeObserver","contentRect","current","observe","disconnect","getBoundingClientRect","collapsible","prev","iconButton","content","Main","main","howToPlay","screenshot","src","alt","toastOptions","App","connectSocket","connect","path","footer","to","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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F,2EAIEhH,EAAOM,GAAG,iBAAiB,SAAC8H,GAAD,OAAgBpB,EAASoB,MAJtD,2C,gEAQa,MAAIN,E,iBC7CNO,EAAiB,WAG5B,IAFA,IACI5H,EAAQ,IACH6H,EAAI,EAAGA,EAAI,EAAGA,IACrB7H,GAHc,mBAGG8H,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOhI,GAGHiI,EAAmB,CACvB,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,eACA,eACA,SACA,SACA,SACA,SACA,eACA,gBAGWC,EAAiB,kBAC5BD,EAAOH,KAAKC,MAAMD,KAAKE,SAAWC,EAAO3C,U,kCC1nB9B6C,GAAS,SAAC,GAAyD,IAApDC,EAAmD,oBAC7E,OACE,kDAAYA,GAAZ,IAAmBjI,UAAWkI,IAAWD,EAAMjI,UAAWC,IAAOkI,YCKxDC,GAAY,WACvB,IAAMhG,EAAON,GAAS,SAAC8B,GAAD,OAAWA,EAAMxB,QACjCU,EAAchB,GAAS,SAAC8B,GAAD,OAAWA,EAAMd,eAa9C,OACE,sBAAK9C,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","file":"static/js/main.c7d032df.chunk.js","sourcesContent":["import create from \"zustand\";\nimport { Token } from \"../components/elements/Token/Token\";\nimport { ReactElement } from \"react\";\nimport { Coordinate } from \"../components/features/Game/Game\";\nimport { checkWinning } from \"../utils/gameLogic\";\nimport produce from \"immer\";\nimport { Turn } from \"../services/gameService\";\n\nexport enum PLAYER {\n  ZERO = 0,\n  ONE = 1,\n}\n\nexport type Matrix = (PLAYER | null)[][];\n\nexport interface Room {\n  roomId: string;\n}\n\nexport interface Player {\n  color: string;\n  symbol: string;\n  socketId?: string;\n  id: PLAYER;\n  score: number;\n  activated: boolean;\n}\n\ntype Opponent = Player & { isComputer?: boolean };\n\nexport enum PHASE {\n  SET = \"set\",\n  MOVE = \"move\",\n}\n\ninterface AppState {\n  me?: Player;\n  opponent?: Opponent;\n  setOpponent: (player?: Opponent) => void;\n  setMe: (player: Player) => void;\n  room?: Room;\n  setRoom: (newRoom?: Room) => void;\n  gameFinished: boolean;\n  setGameFinished: (isFinished: boolean) => void;\n  setActivated: (\n    setMe: boolean,\n    setOpponent: boolean,\n    activated: boolean\n  ) => void;\n  resetActiveGameButKeepRoom: () => void;\n  activePlayer: PLAYER | null;\n  setActivePlayer: (playerId: PLAYER | null) => void;\n  winner: PLAYER | null;\n  winningFields: Set<Coordinate>;\n  adjacentFields: Set<Coordinate>;\n  phase: PHASE;\n  setPhase: (phase: PHASE) => void;\n  nonPlayedTokens: { 0: number[]; 1: number[] };\n  playedTokens: { element: ReactElement; position: string }[];\n  playToken: (\n    playerId: PLAYER,\n    value: Coordinate,\n    prevValue?: Coordinate\n  ) => void;\n  getPlayerById: (id: PLAYER) => Player | undefined;\n  increaseScore: (id: PLAYER) => void;\n  matrix: Matrix;\n  updateMatrix: (\n    { x, y }: Coordinate,\n    value: PLAYER | null,\n    toBeRemoved?: Coordinate\n  ) => void;\n  setAdjacentFields: (adjacentFields: Set<Coordinate>) => void;\n  setWinningFields: (winningFields: Set<Coordinate>) => void;\n  takeTurn: (turn: Turn) => void;\n}\n\nconst initMatrix = [\n  [null, null, null],\n  [null, null, null],\n  [null, null, null],\n];\n\nexport const useStore = create<AppState>((set, get) => ({\n  me: undefined,\n  opponent: undefined,\n  room: undefined,\n  setRoom: (newRoom?: Room) => {\n    set({ room: newRoom });\n  },\n  gameFinished: false,\n  setGameFinished: (isFinished) => set({ gameFinished: isFinished }),\n  activePlayer: PLAYER.ZERO,\n  setActivePlayer: (playerId: PLAYER | null) => set({ activePlayer: playerId }),\n  setOpponent: (player?: Opponent) => set({ opponent: player }),\n  setMe: (player: Player) => set({ me: player }),\n  winner: null,\n  winningFields: new Set<Coordinate>(),\n  adjacentFields: new Set<Coordinate>(),\n  setAdjacentFields: (adjacentFields: Set<Coordinate>) =>\n    set({ adjacentFields }),\n  setWinningFields: (winningFields: Set<Coordinate>) => set({ winningFields }),\n  phase: PHASE.SET,\n  setPhase: (phase: PHASE) => set({ phase }),\n  setActivated: (setMe: boolean, setOpponent: boolean, activated: boolean) => {\n    if (setMe) {\n      set(\n        produce((state) => {\n          state.me.activated = activated;\n        })\n      );\n    }\n    if (setOpponent) {\n      set(\n        produce((state) => {\n          state.opponent.activated = activated;\n        })\n      );\n    }\n  },\n  matrix: [...initMatrix],\n  updateMatrix: (\n    { x, y }: Coordinate,\n    value: PLAYER | null,\n    toBeRemoved?: Coordinate\n  ) => {\n    const matrix = get().matrix;\n    const newMatrix = matrix.map((arr) => arr.slice());\n    if (newMatrix[x][y] === null) {\n      newMatrix[x][y] = value;\n    }\n    if (toBeRemoved) {\n      newMatrix[toBeRemoved.x][toBeRemoved.y] = null;\n    }\n    set({ matrix: [...newMatrix] });\n    set({ adjacentFields: new Set<Coordinate>() });\n    const winnerInfo = checkWinning(newMatrix);\n    if (winnerInfo) {\n      set({ winner: winnerInfo.winner });\n      set({ winningFields: winnerInfo.winningFields });\n    }\n  },\n  playedTokens: [],\n  nonPlayedTokens: {\n    [PLAYER.ZERO]: [0, 1, 2],\n    [PLAYER.ONE]: [0, 1, 2],\n  },\n  playToken: (\n    playerId: PLAYER,\n    { x, y }: Coordinate,\n    prevValue?: Coordinate\n  ) => {\n    const phase = get().phase;\n    if (phase === PHASE.SET) {\n      set(({ nonPlayedTokens }) => ({\n        nonPlayedTokens: {\n          ...nonPlayedTokens,\n          [playerId]: nonPlayedTokens[playerId].slice(0, -1),\n        },\n      }));\n      const player = get().getPlayerById(playerId);\n      if (player) {\n        set(({ playedTokens }) => ({\n          playedTokens: [\n            ...playedTokens,\n            {\n              element: (\n                <Token emoji={player.symbol} color={player.color} size={4} />\n              ),\n              position: `${x}${y}`,\n            },\n          ],\n        }));\n      }\n      const nPlTokens = get().nonPlayedTokens;\n      const noMoreTokens = Object.values(nPlTokens).every(\n        (value) => value.length === 0\n      );\n      if (noMoreTokens) {\n        set({ phase: PHASE.MOVE });\n      }\n    } else if (phase === PHASE.MOVE && prevValue) {\n      const plTokens = get().playedTokens.map((token) =>\n        token.position === `${prevValue.x}${prevValue.y}`\n          ? {\n              element: token.element,\n              position: `${x}${y}`,\n            }\n          : token\n      );\n      set(() => ({ playedTokens: plTokens }));\n    }\n  },\n  getPlayerById: (id: PLAYER): Player | undefined => {\n    const me = get().me;\n    const opponent = get().opponent;\n    return [me, opponent].find((player) => player?.id === id);\n  },\n  increaseScore: (id: PLAYER) => {\n    if (id === get().me?.id) {\n      set(\n        produce((state) => {\n          state.me.score = (get().me?.score || 0) + 1;\n        })\n      );\n    } else if (id === get().opponent?.id) {\n      set(\n        produce((state) => {\n          state.opponent.score = (get().opponent?.score || 0) + 1;\n        })\n      );\n    }\n  },\n  takeTurn: (turn: Turn) => {\n    get().updateMatrix(turn.newCoordinate, turn.playerId, turn.prevCoordinate);\n    get().playToken(turn.playerId, turn.newCoordinate, turn.prevCoordinate);\n    get().setActivePlayer(\n      turn.playerId === PLAYER.ZERO ? PLAYER.ONE : PLAYER.ZERO\n    );\n  },\n  resetActiveGameButKeepRoom: () => {\n    const winner = get().winner;\n    return set((state) => {\n      state.winner = null;\n      state.activePlayer = winner === PLAYER.ZERO ? PLAYER.ONE : PLAYER.ZERO;\n      state.playedTokens = [];\n      state.matrix = [...initMatrix];\n      state.nonPlayedTokens = {\n        [PLAYER.ZERO]: [0, 1, 2],\n        [PLAYER.ONE]: [0, 1, 2],\n      };\n      state.phase = PHASE.SET;\n      state.gameFinished = false;\n    });\n  },\n}));\n","import { io, Socket } from \"socket.io-client\";\nimport { DefaultEventsMap } from \"@socket.io/component-emitter/\";\n\nclass SocketService {\n  public socket: Socket | null = null;\n\n  public connect(\n    url: string\n  ): Promise<Socket<DefaultEventsMap, DefaultEventsMap>> {\n    return new Promise((rs, rj) => {\n      this.socket = io(url);\n\n      if (!this.socket) return rj();\n\n      this.socket.on(\"connect\", () => {\n        rs(this.socket as Socket);\n      });\n\n      this.socket.on(\"connect_error\", (err) => {\n        rj(err);\n      });\n    });\n  }\n}\n\nexport default new SocketService();\n","import React from \"react\";\nimport styles from \"./Token.module.scss\";\n\ninterface TokenProps {\n  color?: string;\n  emoji: string;\n  size: number;\n}\n\nexport const Token = ({ color, emoji, size }: TokenProps): JSX.Element => (\n  <div className={styles.token}>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      className={styles.octagon}\n      style={{ width: `${size}rem`, height: `${size}rem` }}\n    >\n      <path\n        {...(color && { style: { fill: color } })}\n        d=\"M24 16.971l-7.029 7.029h-9.942l-7.029-7.029v-9.942l7.029-7.029h9.942l7.029 7.029z\"\n      />\n    </svg>\n    <div className={styles.emoji} style={{ fontSize: `${size / 1.75}rem` }}>\n      {emoji}\n    </div>\n  </div>\n);\n","import { Coordinate } from \"../components/features/Game/Game\";\nimport { Matrix } from \"../store/store\";\n\nexport interface WinnerInfo {\n  winner: 0 | 1 | null;\n  winningFields: Set<Coordinate>;\n}\n\nexport const checkWinning = (matrix: Matrix): WinnerInfo | undefined => {\n  // columns check\n  for (let y = 0; y < 3; y++) {\n    // check if every value in column y is the same and therefore Set has only one value (and is not null)\n    if (\n      matrix[0][y] !== null &&\n      new Set([0, 1, 2].map((x) => matrix[x][y])).size === 1\n    ) {\n      return {\n        winner: matrix[0][y],\n        winningFields: new Set([0, 1, 2].map((x) => ({ x, y }))),\n      };\n    }\n  }\n\n  // rows check\n  for (let x = 0; x < 3; x++) {\n    // check if every value in row x is the same and therefore Set has only one value (and is not null)\n    if (matrix[x][0] !== null && new Set(matrix[x]).size === 1) {\n      return {\n        winner: matrix[x][0],\n        winningFields: new Set(matrix[1].map((value, y) => ({ x, y }))),\n      };\n    }\n  }\n\n  // diagonals check\n  // check if middle value is not null and then check the two diagonals for same value\n  if (matrix[1][1] !== null) {\n    if (new Set([matrix[0][0], matrix[1][1], matrix[2][2]]).size === 1) {\n      return {\n        winner: matrix[1][1],\n        winningFields: new Set([\n          { x: 0, y: 0 },\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n        ]),\n      };\n    } else if (new Set([matrix[0][2], matrix[1][1], matrix[2][0]]).size === 1) {\n      return {\n        winner: matrix[1][1],\n        winningFields: new Set([\n          { x: 0, y: 2 },\n          { x: 1, y: 1 },\n          { x: 2, y: 0 },\n        ]),\n      };\n    }\n  }\n};\n\nexport const coordinateExistsInSet = (\n  coordinate: Coordinate,\n  set: Set<Coordinate>\n): boolean =>\n  Array.from(set).some((value) => value.x === coordinate.x && value.y === coordinate.y);\n\nexport const getAdjacentFields = ({ x, y }: Coordinate): Set<Coordinate> => {\n  const betweenIndices = (num: number) => num >= 0 && num <= 2;\n  const nonDiagonalCoordinates = new Set([\n    { x: 1, y: 0 },\n    { x: 2, y: 1 },\n    { x: 0, y: 1 },\n    { x: 1, y: 2 },\n  ]);\n  return new Set(\n    [\n      { x: x - 1, y },\n      { x: x + 1, y },\n      { x, y: y - 1 },\n      { x, y: y + 1 },\n      ...(coordinateExistsInSet({ x, y }, nonDiagonalCoordinates)\n        ? []\n        : [\n            { x: x + 1, y: y + 1 },\n            { x: x - 1, y: y - 1 },\n            { x: x - 1, y: y + 1 },\n            { x: x + 1, y: y - 1 },\n          ]),\n    ].filter(({ x: a, y: b }) => betweenIndices(a) && betweenIndices(b))\n  );\n};\n","export const PrivacyPolicy = (): JSX.Element => (\n  <div style={{ maxWidth: \"700px\" }}>\n    <h1>Privacy Policy</h1>\n    <div>\n      <p>\n        This page informs you of our policies regarding the collection, use and\n        disclosure of Personal Information we receive from users of the Site. We\n        use your Personal Information only for providing and improving the Site.\n        By using the Site, you agree to the collection and use of information in\n        accordance with this policy.\n      </p>\n      <p>\n        <h4>1. Log data</h4>\n        Like many site operators, we collect information that your browser sends\n        whenever you visit our Site (\"Log Data\"). This Log Data may include\n        information such as your computer's Internet Protocol (\"IP\") address,\n        browser type, browser version, the pages of our Site that you visit, the\n        time and date of your visit, the time spent on those pages and other\n        statistics. In addition, we may use third party services such as\n        Amplitude that collect, monitor and analyze this data.\n      </p>\n      <p>\n        <h4>2. Cookies</h4>\n        Cookies are files with small amount of data, which may include an\n        anonymous unique identifier. Cookies are sent to your browser from a web\n        site and stored on your computer's hard drive. Like many sites, we use\n        \"cookies\" to collect information. You can instruct your browser to\n        refuse all cookies or to indicate when a cookie is being sent.\n      </p>\n      <p>\n        <h4>3. Security</h4>\n        The security of your Personal Information is important to us, but\n        remember that no method of transmission over the Internet, or method of\n        electronic storage, is 100% secure. While we strive to use commercially\n        acceptable means to protect your Personal Information, we cannot\n        guarantee its absolute security.\n      </p>\n      <p>\n        <h4>4. Changes to this privacy policy</h4>\n        This Privacy Policy will remain in effect except with respect to any\n        changes in its provisions in the future, which will be in effect\n        immediately after being posted on this page. We reserve the right to\n        update or change our Privacy Policy at any time and you should check\n        this Privacy Policy periodically. Your continued use of the Site after\n        we post any modifications to the Privacy Policy on this page will\n        constitute your acknowledgment of the modifications and your consent to\n        abide and be bound by the modified Privacy Policy.\n      </p>\n      <p>\n        <h4>5. Contact us</h4>\n        If you have any questions about this Privacy Policy, please contact us\n        at{\" \"}\n        <a href=\"mailto:hi@three-mens-morris.com\">hi@three-mens-morris.com</a>.\n      </p>\n    </div>\n  </div>\n);\n","import { Socket } from \"socket.io-client\";\nimport { Coordinate } from \"../components/features/Game/Game\";\nimport { PLAYER } from \"../store/store\";\n\nexport interface Turn {\n  prevCoordinate?: Coordinate;\n  newCoordinate: Coordinate;\n  playerId: PLAYER;\n}\n\nclass GameService {\n  public async reactivate(socket: Socket) {\n    socket.emit(\"reactivate\");\n  }\n\n  public async onReactivate(socket: Socket, listener: () => void) {\n    socket.on(\"on_reactivate\", () => listener());\n  }\n\n  public async turnFinished(socket: Socket, turn: Turn) {\n    socket.emit(\"turn_finished\", turn);\n  }\n\n  public async onTurnFinished(socket: Socket, listener: (turn: Turn) => void) {\n    socket.on(\"on_turn_finished\", (turn) => listener(turn));\n  }\n}\n\nexport default new GameService();\n","import React from \"react\";\n\nexport const Board = (): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 500 500\"\n    shapeRendering=\"geometricPrecision\"\n    textRendering=\"geometricPrecision\"\n  >\n    <rect\n      width=\"490\"\n      height=\"490\"\n      rx=\"0\"\n      ry=\"0\"\n      transform=\"translate(5 5)\"\n      fill=\"none\"\n      stroke=\"#000\"\n      strokeWidth=\"5\"\n      strokeLinecap=\"round\"\n    />\n    <line\n      x1=\"-245\"\n      y1=\"-245\"\n      x2=\"245\"\n      y2=\"245\"\n      transform=\"translate(250 250)\"\n      fill=\"none\"\n      stroke=\"#000\"\n      strokeWidth=\"5\"\n    />\n    <line\n      x1=\"245\"\n      y1=\"-245\"\n      x2=\"-245\"\n      y2=\"245\"\n      transform=\"translate(250 250)\"\n      fill=\"none\"\n      stroke=\"#000\"\n      strokeWidth=\"5\"\n    />\n    <line\n      x1=\"-245\"\n      y1=\"0\"\n      x2=\"245\"\n      y2=\"0\"\n      transform=\"translate(250 250)\"\n      fill=\"none\"\n      stroke=\"#000\"\n      strokeWidth=\"5\"\n    />\n    <line\n      x1=\"0\"\n      y1=\"240\"\n      x2=\"0\"\n      y2=\"-250\"\n      transform=\"translate(250 255)\"\n      fill=\"none\"\n      stroke=\"#000\"\n      strokeWidth=\"5\"\n    />\n  </svg>\n);\n","import { Socket } from \"socket.io-client\";\nimport { Player } from \"../store/store\";\n\ninterface JoinInfo {\n  roomId: string;\n  player: Player;\n}\n\ninterface RoomInfo {\n  opponent: Player;\n}\n\nclass RoomService {\n  public async joinGameRoom(\n    socket: Socket,\n    joinInfo: JoinInfo\n  ): Promise<RoomInfo> {\n    return new Promise((rs, rj) => {\n      socket.emit(\"join_room\", joinInfo);\n      socket.on(\"room_joined\", (roomInfo: RoomInfo) => rs(roomInfo));\n      socket.on(\"room_join_error\", ({ error }) => rj(error));\n    });\n  }\n\n  public async createGameRoom(\n    socket: Socket,\n    gameMaster: Player\n  ): Promise<string> {\n    return new Promise((rs, rj) => {\n      socket.emit(\"create_room\", gameMaster);\n      socket.on(\"room_created\", (roomId) => rs(roomId));\n    });\n  }\n\n  public async onOpponentJoined(\n    socket: Socket,\n    listener: (player: Player) => void\n  ) {\n    socket.on(\"opponent_joined\", (player) => {\n      listener(player);\n    });\n  }\n\n  public async onOpponentLeft(\n    socket: Socket,\n    listener: (playerName: string) => void\n  ) {\n    socket.on(\"opponent_left\", (playerName) => listener(playerName));\n  }\n}\n\nexport default new RoomService();\n","export const copyToClipboard = (str: string) => {\n  if (navigator && navigator.clipboard && navigator.clipboard.writeText)\n    return navigator.clipboard.writeText(str);\n  return Promise.reject(\"The Clipboard API is not available.\");\n};\n\nexport const getRandomColor = (): string => {\n  const letters = \"0123456789ABCDEF\";\n  let color = \"#\";\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nconst emojis: string[] = [\n  \"😄\",\n  \"😃\",\n  \"😀\",\n  \"😊\",\n  \"☺\",\n  \"😉\",\n  \"😍\",\n  \"😘\",\n  \"😚\",\n  \"😗\",\n  \"😙\",\n  \"😜\",\n  \"😝\",\n  \"😛\",\n  \"😳\",\n  \"😁\",\n  \"😔\",\n  \"😌\",\n  \"😒\",\n  \"😞\",\n  \"😣\",\n  \"😢\",\n  \"😂\",\n  \"😭\",\n  \"😪\",\n  \"😥\",\n  \"😰\",\n  \"😅\",\n  \"😓\",\n  \"😩\",\n  \"😫\",\n  \"😨\",\n  \"😱\",\n  \"😠\",\n  \"😡\",\n  \"😤\",\n  \"😖\",\n  \"😆\",\n  \"😋\",\n  \"😷\",\n  \"😎\",\n  \"😴\",\n  \"😵\",\n  \"😲\",\n  \"😟\",\n  \"😦\",\n  \"😧\",\n  \"😈\",\n  \"👿\",\n  \"😮\",\n  \"😬\",\n  \"😐\",\n  \"😕\",\n  \"😯\",\n  \"😶\",\n  \"😇\",\n  \"😏\",\n  \"😑\",\n  \"👲\",\n  \"👳\",\n  \"👮\",\n  \"👷\",\n  \"💂\",\n  \"👶\",\n  \"👦\",\n  \"👧\",\n  \"👨\",\n  \"👩\",\n  \"👴\",\n  \"👵\",\n  \"👱\",\n  \"👼\",\n  \"👸\",\n  \"😺\",\n  \"😸\",\n  \"😻\",\n  \"😽\",\n  \"😼\",\n  \"🙀\",\n  \"😿\",\n  \"😹\",\n  \"😾\",\n  \"👹\",\n  \"👺\",\n  \"🙈\",\n  \"🙉\",\n  \"🙊\",\n  \"💀\",\n  \"👽\",\n  \"💩\",\n  \"🔥\",\n  \"✨\",\n  \"🌟\",\n  \"💫\",\n  \"💥\",\n  \"💢\",\n  \"💦\",\n  \"💧\",\n  \"💤\",\n  \"💨\",\n  \"👂\",\n  \"👀\",\n  \"👃\",\n  \"👅\",\n  \"👄\",\n  \"👍\",\n  \"👎\",\n  \"👌\",\n  \"👊\",\n  \"✊\",\n  \"✌\",\n  \"👋\",\n  \"✋\",\n  \"👐\",\n  \"👆\",\n  \"👇\",\n  \"👉\",\n  \"👈\",\n  \"🙌\",\n  \"🙏\",\n  \"☝\",\n  \"👏\",\n  \"💪\",\n  \"🚶\",\n  \"🏃\",\n  \"💃\",\n  \"👫\",\n  \"👪\",\n  \"👬\",\n  \"👭\",\n  \"💏\",\n  \"💑\",\n  \"👯\",\n  \"🙆\",\n  \"🙅\",\n  \"💁\",\n  \"🙋\",\n  \"💆\",\n  \"💇\",\n  \"💅\",\n  \"👰\",\n  \"🙎\",\n  \"🙍\",\n  \"🙇\",\n  \"🎩\",\n  \"👑\",\n  \"👒\",\n  \"👟\",\n  \"👞\",\n  \"👡\",\n  \"👠\",\n  \"👢\",\n  \"👕\",\n  \"👔\",\n  \"👚\",\n  \"👗\",\n  \"🎽\",\n  \"👖\",\n  \"👘\",\n  \"👙\",\n  \"💼\",\n  \"👜\",\n  \"👝\",\n  \"👛\",\n  \"👓\",\n  \"🎀\",\n  \"🌂\",\n  \"💄\",\n  \"💛\",\n  \"💙\",\n  \"💜\",\n  \"💚\",\n  \"❤\",\n  \"💔\",\n  \"💗\",\n  \"💓\",\n  \"💕\",\n  \"💖\",\n  \"💞\",\n  \"💘\",\n  \"💌\",\n  \"💋\",\n  \"💍\",\n  \"💎\",\n  \"👤\",\n  \"👥\",\n  \"💬\",\n  \"👣\",\n  \"💭\",\n  \"🐶\",\n  \"🐺\",\n  \"🐱\",\n  \"🐭\",\n  \"🐹\",\n  \"🐰\",\n  \"🐸\",\n  \"🐯\",\n  \"🐨\",\n  \"🐻\",\n  \"🐷\",\n  \"🐽\",\n  \"🐮\",\n  \"🐗\",\n  \"🐵\",\n  \"🐒\",\n  \"🐴\",\n  \"🐑\",\n  \"🐘\",\n  \"🐼\",\n  \"🐧\",\n  \"🐦\",\n  \"🐤\",\n  \"🐥\",\n  \"🐣\",\n  \"🐔\",\n  \"🐍\",\n  \"🐢\",\n  \"🐛\",\n  \"🐝\",\n  \"🐜\",\n  \"🐞\",\n  \"🐌\",\n  \"🐙\",\n  \"🐚\",\n  \"🐠\",\n  \"🐟\",\n  \"🐬\",\n  \"🐳\",\n  \"🐋\",\n  \"🐄\",\n  \"🐏\",\n  \"🐀\",\n  \"🐃\",\n  \"🐅\",\n  \"🐇\",\n  \"🐉\",\n  \"🐎\",\n  \"🐐\",\n  \"🐓\",\n  \"🐕\",\n  \"🐖\",\n  \"🐁\",\n  \"🐂\",\n  \"🐲\",\n  \"🐡\",\n  \"🐊\",\n  \"🐫\",\n  \"🐪\",\n  \"🐆\",\n  \"🐈\",\n  \"🐩\",\n  \"🐾\",\n  \"💐\",\n  \"🌸\",\n  \"🌷\",\n  \"🍀\",\n  \"🌹\",\n  \"🌻\",\n  \"🌺\",\n  \"🍁\",\n  \"🍃\",\n  \"🍂\",\n  \"🌿\",\n  \"🌾\",\n  \"🍄\",\n  \"🌵\",\n  \"🌴\",\n  \"🌲\",\n  \"🌳\",\n  \"🌰\",\n  \"🌱\",\n  \"🌼\",\n  \"🌐\",\n  \"🌞\",\n  \"🌝\",\n  \"🌚\",\n  \"🌑\",\n  \"🌒\",\n  \"🌓\",\n  \"🌔\",\n  \"🌕\",\n  \"🌖\",\n  \"🌗\",\n  \"🌘\",\n  \"🌜\",\n  \"🌛\",\n  \"🌙\",\n  \"🌍\",\n  \"🌎\",\n  \"🌏\",\n  \"🌋\",\n  \"🌌\",\n  \"🌠\",\n  \"⭐\",\n  \"☀\",\n  \"⛅\",\n  \"☁\",\n  \"⚡\",\n  \"☔\",\n  \"❄\",\n  \"⛄\",\n  \"🌀\",\n  \"🌁\",\n  \"🌈\",\n  \"🌊\",\n  \"🎍\",\n  \"💝\",\n  \"🎎\",\n  \"🎒\",\n  \"🎓\",\n  \"🎏\",\n  \"🎆\",\n  \"🎇\",\n  \"🎐\",\n  \"🎑\",\n  \"🎃\",\n  \"👻\",\n  \"🎅\",\n  \"🎄\",\n  \"🎁\",\n  \"🎋\",\n  \"🎉\",\n  \"🎊\",\n  \"🎈\",\n  \"🎌\",\n  \"🔮\",\n  \"🎥\",\n  \"📷\",\n  \"📹\",\n  \"📼\",\n  \"💿\",\n  \"📀\",\n  \"💽\",\n  \"💾\",\n  \"💻\",\n  \"📱\",\n  \"☎\",\n  \"📞\",\n  \"📟\",\n  \"📠\",\n  \"📡\",\n  \"📺\",\n  \"📻\",\n  \"⏳\",\n  \"⌛\",\n  \"⏰\",\n  \"⌚\",\n  \"🔒\",\n  \"🔑\",\n  \"🔎\",\n  \"💡\",\n  \"🔦\",\n  \"🔆\",\n  \"🔅\",\n  \"🔌\",\n  \"🔋\",\n  \"🔍\",\n  \"🛁\",\n  \"🛀\",\n  \"🚿\",\n  \"🚽\",\n  \"🔧\",\n  \"🔩\",\n  \"🔨\",\n  \"🚪\",\n  \"🚬\",\n  \"💣\",\n  \"🔫\",\n  \"🔪\",\n  \"💊\",\n  \"💉\",\n  \"💰\",\n  \"💴\",\n  \"💵\",\n  \"💷\",\n  \"💶\",\n  \"💳\",\n  \"💸\",\n  \"📲\",\n  \"📧\",\n  \"📯\",\n  \"📫\",\n  \"📪\",\n  \"📬\",\n  \"📭\",\n  \"📮\",\n  \"📦\",\n  \"📝\",\n  \"📄\",\n  \"📃\",\n  \"📑\",\n  \"📊\",\n  \"📈\",\n  \"📉\",\n  \"📜\",\n  \"📋\",\n  \"📅\",\n  \"📆\",\n  \"📇\",\n  \"📁\",\n  \"📂\",\n  \"✂\",\n  \"📌\",\n  \"📎\",\n  \"✒\",\n  \"✏\",\n  \"📏\",\n  \"📐\",\n  \"📕\",\n  \"📗\",\n  \"📘\",\n  \"📙\",\n  \"📓\",\n  \"📔\",\n  \"📒\",\n  \"📚\",\n  \"📖\",\n  \"🔖\",\n  \"📛\",\n  \"🔬\",\n  \"🔭\",\n  \"📰\",\n  \"🎨\",\n  \"🎬\",\n  \"🎤\",\n  \"🎧\",\n  \"🎼\",\n  \"🎵\",\n  \"🎶\",\n  \"🎹\",\n  \"🎻\",\n  \"🎺\",\n  \"🎷\",\n  \"🎸\",\n  \"👾\",\n  \"🎮\",\n  \"🃏\",\n  \"🎴\",\n  \"🀄\",\n  \"🎲\",\n  \"🎯\",\n  \"🏈\",\n  \"🏀\",\n  \"⚽\",\n  \"⚾\",\n  \"🎾\",\n  \"🎱\",\n  \"🏉\",\n  \"🎳\",\n  \"⛳\",\n  \"🚵\",\n  \"🚴\",\n  \"🏁\",\n  \"🏇\",\n  \"🏆\",\n  \"🎿\",\n  \"🏂\",\n  \"🏊\",\n  \"🏄\",\n  \"🎣\",\n  \"☕\",\n  \"🍵\",\n  \"🍶\",\n  \"🍼\",\n  \"🍺\",\n  \"🍻\",\n  \"🍸\",\n  \"🍹\",\n  \"🍷\",\n  \"🍴\",\n  \"🍕\",\n  \"🍔\",\n  \"🍟\",\n  \"🍗\",\n  \"🍖\",\n  \"🍝\",\n  \"🍛\",\n  \"🍤\",\n  \"🍱\",\n  \"🍣\",\n  \"🍥\",\n  \"🍙\",\n  \"🍘\",\n  \"🍚\",\n  \"🍜\",\n  \"🍲\",\n  \"🍢\",\n  \"🍡\",\n  \"🍳\",\n  \"🍞\",\n  \"🍩\",\n  \"🍮\",\n  \"🍦\",\n  \"🍨\",\n  \"🍧\",\n  \"🎂\",\n  \"🍰\",\n  \"🍪\",\n  \"🍫\",\n  \"🍬\",\n  \"🍭\",\n  \"🍯\",\n  \"🍎\",\n  \"🍏\",\n  \"🍊\",\n  \"🍋\",\n  \"🍒\",\n  \"🍇\",\n  \"🍉\",\n  \"🍓\",\n  \"🍑\",\n  \"🍈\",\n  \"🍌\",\n  \"🍐\",\n  \"🍍\",\n  \"🍠\",\n  \"🍆\",\n  \"🍅\",\n  \"🌽\",\n  \"🏠\",\n  \"🏡\",\n  \"🏫\",\n  \"🏢\",\n  \"🏣\",\n  \"🏥\",\n  \"🏦\",\n  \"🏪\",\n  \"🏩\",\n  \"🏨\",\n  \"💒\",\n  \"⛪\",\n  \"🏬\",\n  \"🏤\",\n  \"🌇\",\n  \"🌆\",\n  \"🏯\",\n  \"🏰\",\n  \"⛺\",\n  \"🏭\",\n  \"🗼\",\n  \"🗾\",\n  \"🗻\",\n  \"🌄\",\n  \"🌅\",\n  \"🌃\",\n  \"🗽\",\n  \"🌉\",\n  \"🎠\",\n  \"🎡\",\n  \"⛲\",\n  \"🎢\",\n  \"🚢\",\n  \"⛵\",\n  \"🚤\",\n  \"🚣\",\n  \"⚓\",\n  \"🚀\",\n  \"✈\",\n  \"💺\",\n  \"🚁\",\n  \"🚂\",\n  \"🚊\",\n  \"🚉\",\n  \"🚞\",\n  \"🚆\",\n  \"🚄\",\n  \"🚅\",\n  \"🚈\",\n  \"🚇\",\n  \"🚝\",\n  \"🚋\",\n  \"🚃\",\n  \"🚎\",\n  \"🚌\",\n  \"🚍\",\n  \"🚙\",\n  \"🚘\",\n  \"🚗\",\n  \"🚕\",\n  \"🚖\",\n  \"🚛\",\n  \"🚚\",\n  \"🚨\",\n  \"🚓\",\n  \"🚔\",\n  \"🚒\",\n  \"🚑\",\n  \"🚐\",\n  \"🚲\",\n  \"🚡\",\n  \"🚟\",\n  \"🚠\",\n  \"🚜\",\n  \"💈\",\n  \"🚏\",\n  \"🎫\",\n  \"🚦\",\n  \"🚥\",\n  \"🚧\",\n  \"🔰\",\n  \"🏮\",\n  \"🎰\",\n  \"♨\",\n  \"🗿\",\n  \"🎪\",\n  \"🎭\",\n  \"📍\",\n  \"🚩\",\n  \"✳\",\n  \"❇\",\n  \"✴\",\n  \"💟\",\n  \"💠\",\n  \"♠\",\n  \"♥\",\n  \"♣\",\n  \"♦\",\n  \"💮\",\n  \"💯\",\n];\n\nexport const getRandomEmoji = (): string =>\n  emojis[Math.floor(Math.random() * emojis.length)];\n","import React, { ComponentProps } from \"react\";\nimport styles from \"./Button.module.scss\";\nimport classnames from \"classnames\";\n\nexport const Button = ({ ...props }: ComponentProps<\"button\">): JSX.Element => {\n  return (\n    <button {...props} className={classnames(props.className, styles.button)} />\n  );\n};\n","import React from \"react\";\nimport toast from \"react-hot-toast\";\nimport { PLAYER, useStore } from \"../../../store/store\";\nimport styles from \"./ShareInfo.module.scss\";\nimport {\n  copyToClipboard,\n  getRandomColor,\n  getRandomEmoji,\n} from \"../../../utils/helper\";\nimport { Button } from \"../../elements/Button/Button\";\n\nexport const ShareInfo = (): JSX.Element => {\n  const room = useStore((state) => state.room);\n  const setOpponent = useStore((state) => state.setOpponent);\n\n  const setComputerOpponent = () => {\n    setOpponent({\n      score: 0,\n      symbol: getRandomEmoji(),\n      color: getRandomColor(),\n      id: PLAYER.ONE,\n      isComputer: true,\n      activated: true,\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.shareInfo}>\n        <h2>Game ID: {room?.roomId}</h2>\n        <button\n          className={styles.shareButton}\n          onClick={() => {\n            if (navigator.share) {\n              navigator\n                .share({\n                  title: \"Invite\",\n                  text: \"Play Three Men's Morris with me!\",\n                  url: `${window.location}?id=${room?.roomId}`,\n                })\n                .catch();\n            } else {\n              copyToClipboard(`${window.location}?id=${room?.roomId}`).then(\n                () =>\n                  toast(\n                    `The invite link ${window.location}?id=${room?.roomId} was copied to clipboard.`,\n                    {\n                      icon: \"📋\",\n                      duration: 10000,\n                    }\n                  ),\n                () =>\n                  alert(\n                    `Failed to copy the invite link ${window.location}?id=${room?.roomId}. Please copy it yourself or tell them the Game ID to enter it manually.`\n                  )\n              );\n            }\n          }}\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M22 6a4 4 0 10-7.912.838L9.017 9.373a4 4 0 10-.329 5.589l5.33 2.665a4 4 0 10.686-1.893l-4.912-2.456a3.996 3.996 0 00.12-2.116l5.071-2.535A4 4 0 0022 6z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n        </button>\n      </div>\n      <div>Share the ID with a friend or</div>\n      <Button onClick={setComputerOpponent}>Play against computer</Button>\n    </div>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport styles from \"./StatusBox.module.scss\";\nimport Lottie from \"react-lottie\";\nimport { PHASE, useStore } from \"../../../store/store\";\nimport { Button } from \"../../elements/Button/Button\";\nimport pop from \"../../../lotties/pop.json\";\n\ninterface StatusBoxProps {\n  reactivate: () => void;\n}\nexport const StatusBox = ({ reactivate }: StatusBoxProps): JSX.Element => {\n  const phase = useStore((state) => state.phase);\n  const opponent = useStore((state) => state.opponent);\n  const gameFinished = useStore((state) => state.gameFinished);\n  const winner = useStore((state) => state.winner);\n  const me = useStore((state) => state.me);\n  const activePlayer = useStore((state) => state.activePlayer);\n\n  const playAgainButton = (\n    <Button className={styles.playAgain} onClick={reactivate}>\n      Play again\n    </Button>\n  );\n\n  const getStatusText = (): ReactNode => {\n    if (!opponent || (!gameFinished && !opponent.activated)) {\n      return (\n        <h2 className={styles.pulse} key=\"wait\">\n          Wait for opponent to join\n        </h2>\n      );\n    } else if (winner === me?.id) {\n      return (\n        <>\n          <div className={styles.winningText}>\n            <h2 className={styles.pulse} key=\"victory\">\n              Victory\n            </h2>\n            <Lottie\n              options={{\n                loop: true,\n                autoplay: true,\n                animationData: pop,\n                rendererSettings: {\n                  preserveAspectRatio: \"xMidYMid slice\",\n                },\n              }}\n              height={90}\n              width={150}\n            />\n          </div>\n          {playAgainButton}\n        </>\n      );\n    } else if (winner === opponent?.id) {\n      return (\n        <>\n          <h2 className={styles.pulse} key=\"defeat\">\n            Defeat ☹\n          </h2>\n          {playAgainButton}\n        </>\n      );\n    } else if (activePlayer === me?.id) {\n      return (\n        <h2 className={styles.pulse} key=\"yourTurn\">\n          your turn\n        </h2>\n      );\n    } else {\n      return (\n        <h2 className={styles.pulse} key=\"opponentsTurn\">\n          opponents turn\n        </h2>\n      );\n    }\n  };\n\n  return (\n    <div className={styles.row}>\n      <div className={styles.statusBox}>\n        <div className={styles.statusInfo}>{getStatusText()}</div>\n        <div className={styles.phaseInfo}>\n          {phase &&\n            opponent &&\n            !gameFinished &&\n            opponent.activated &&\n            (phase === PHASE.SET ? (\n              <>\n                <h3>Placing Tokens</h3>\n                Players take turns placing their tokens on empty intersections\n              </>\n            ) : (\n              <>\n                <h3>Moving Tokens</h3>\n                Players move one of their tokens per turn to any adjacent linked\n                empty position\n              </>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"./Box.module.scss\";\nimport { Player, useStore } from \"../../../../store/store\";\nimport { Token } from \"../../../elements/Token/Token\";\n\ninterface BoxProps {\n  player: Player;\n  name: string;\n}\n\nexport const Box = ({ player, name }: BoxProps): JSX.Element => {\n  const nonPlayedTokens = useStore((state) => state.nonPlayedTokens);\n  return (\n    <div className={styles.playerBox}>\n      <div className={styles.head}>\n        <h3>\n          {player.symbol} {name}\n        </h3>\n        <div className={styles.score}>{player.score}</div>\n      </div>\n      <div className={styles.nonPlayedTokens}>\n        {nonPlayedTokens[player.id].map((token, index) => (\n          <Token\n            color={player?.color}\n            emoji={player?.symbol}\n            size={4}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"./PlayerInfoBox.module.scss\";\nimport { Box } from \"./Box/Box\";\nimport { useStore } from \"../../../store/store\";\n\nexport const PlayerInfoBox = (): JSX.Element => {\n  const opponent = useStore((state) => state.opponent);\n  const me = useStore((state) => state.me);\n\n  return (\n    <div className={styles.row}>\n      <div className={styles.playerInfo}>\n        {me && <Box player={me} name=\"Me\" />}\n        {opponent && <Box player={opponent} name=\"Opponent\" />}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"./PlayedTokens.module.scss\";\nimport classnames from \"classnames\";\nimport { useStore } from \"../../../store/store\";\n\nexport const PlayedTokens = (): JSX.Element => {\n  const playedTokens = useStore((state) => state.playedTokens);\n  return (\n    <>\n      {playedTokens.map(({ element, position }, index) => (\n        <div\n          key={index}\n          className={classnames(styles.token, styles[`s${position}`])}\n        >\n          <div className={styles.tokenWrapper}>{element}</div>\n        </div>\n      ))}\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { PHASE, PLAYER, useStore } from \"../../../store/store\";\nimport styles from \"./Fields.module.scss\";\nimport { Coordinate } from \"../Game/Game\";\nimport classnames from \"classnames\";\nimport {\n  coordinateExistsInSet,\n  getAdjacentFields,\n} from \"../../../utils/gameLogic\";\nimport socketService from \"../../../services/socketService\";\nimport gameService from \"../../../services/gameService\";\nimport toast from \"react-hot-toast\";\nimport { PlayedTokens } from \"../PlayedTokens/PlayedTokens\";\n\nexport const Fields = (): JSX.Element => {\n  const phase = useStore((state) => state.phase);\n  const opponent = useStore((state) => state.opponent);\n  const winner = useStore((state) => state.winner);\n  const me = useStore((state) => state.me);\n  const activePlayer = useStore((state) => state.activePlayer);\n  const adjacentFields = useStore((state) => state.adjacentFields);\n  const winningFields = useStore((state) => state.winningFields);\n  const matrix = useStore((state) => state.matrix);\n  const setAdjacentFields = useStore((state) => state.setAdjacentFields);\n  const [prevCoordinate, setPrevCoordinate] = useState<\n    Coordinate | undefined\n  >();\n\n  const handleFieldClick = ({ x, y }: Coordinate): void => {\n    if (activePlayer === me?.id && opponent) {\n      if (\n        phase === PHASE.MOVE &&\n        (!prevCoordinate || (prevCoordinate && matrix[x][y] !== null))\n      ) {\n        setAdjacentFields(getAdjacentFields({ x, y }));\n        setPrevCoordinate({ x, y });\n      } else {\n        turnFinished({ x, y });\n      }\n    }\n  };\n\n  const turnFinished = (coordinate: Coordinate): void => {\n    if (socketService.socket) {\n      setPrevCoordinate(undefined);\n      void gameService.turnFinished(socketService.socket, {\n        newCoordinate: coordinate,\n        playerId: activePlayer || 0,\n        ...(phase === PHASE.MOVE && { prevCoordinate }),\n      });\n    } else {\n      toast(\"Connection Error! Please reload to start a new game.\", {\n        icon: \"❗\",\n        duration: 3000,\n      });\n    }\n  };\n\n  const isFieldEnabled = (value: PLAYER | null, coordinate: Coordinate): boolean => {\n    if (activePlayer === me?.id && winner === null && opponent?.activated) {\n      if (phase === PHASE.SET) {\n        return value === null;\n      } else if (phase === PHASE.MOVE) {\n        const emptyAdjacentFields = Array.from(getAdjacentFields(coordinate)).filter(\n          ({ x, y }) => matrix[x][y] === null\n        );\n        return (\n          (coordinateExistsInSet(coordinate, adjacentFields) && value === null) ||\n          (value === me?.id && emptyAdjacentFields.length > 0)\n        );\n      }\n      return false;\n    }\n    return false;\n  };\n\n  const isFieldActive = (value: PLAYER | null, coordinate: Coordinate): boolean => {\n    if (isFieldEnabled(value, coordinate)) {\n      if (phase === PHASE.MOVE) {\n        if (prevCoordinate) {\n          return coordinateExistsInSet(coordinate, adjacentFields) && value === null;\n        } else {\n          const emptyAdjacentFields = Array.from(\n            getAdjacentFields(coordinate)\n          ).filter(({ x, y }) => matrix[x][y] === null);\n          return value === me?.id && emptyAdjacentFields.length > 0;\n        }\n      } else {\n        return isFieldEnabled(value, coordinate);\n      }\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <div className={styles.fields}>\n      <>\n        <div className={styles.playedTokens}>\n          <div className={styles.tokensWrapper}>\n            <PlayedTokens />\n          </div>\n        </div>\n        {matrix.map((row, x) => (\n          <div className={styles.row} key={x}>\n            {row.map((value, y) => (\n              <button\n                className={classnames(\n                  styles.field,\n                  coordinateExistsInSet({ x, y }, winningFields) &&\n                    styles.winningField,\n                  isFieldActive(value, { x, y }) && styles.activeField,\n                  prevCoordinate?.x === x &&\n                    prevCoordinate.y === y &&\n                    styles.selectedField\n                )}\n                onClick={() => handleFieldClick({ x, y })}\n                disabled={!isFieldEnabled(value, { x, y })}\n                key={`${x}${y}`}\n              />\n            ))}\n          </div>\n        ))}\n      </>\n    </div>\n  );\n};\n","import { Coordinate } from \"../components/features/Game/Game\";\nimport { Matrix, PLAYER } from \"../store/store\";\nimport { getAdjacentFields } from \"./gameLogic\";\n\ninterface PossibleWin {\n  nullCoordinate: Coordinate;\n  line: Coordinate[];\n}\n\ninterface MoveTurnCoordinates {\n  newCoordinate: Coordinate;\n  prevCoordinate: Coordinate;\n}\n\nconst columns: Record<number, Coordinate[]> = {\n  0: [0, 1, 2].map((x) => ({ x, y: 0 })),\n  1: [0, 1, 2].map((x) => ({ x, y: 1 })),\n  2: [0, 1, 2].map((x) => ({ x, y: 2 })),\n};\n\nconst diagonal1 = [\n  { x: 0, y: 0 },\n  { x: 1, y: 1 },\n  { x: 2, y: 2 },\n];\nconst diagonal2 = [\n  { x: 0, y: 2 },\n  { x: 1, y: 1 },\n  { x: 2, y: 0 },\n];\nconst diagonals = [diagonal1, diagonal2];\n\nexport const getComputerTurnInMovePhase = (\n    matrix: Matrix\n): MoveTurnCoordinates => {\n  const winTurn = makeComputerWinMovePhase(matrix);\n  if (winTurn) return winTurn;\n\n  const preventTurn = preventPlayerFromWinningMovePhase(matrix);\n  if (preventTurn) return preventTurn;\n\n  return makeRandomNotDangerousMove(matrix);\n};\n\nexport const getComputerTurnInSetPhase = (\n    matrix: Matrix\n): Coordinate => {\n  const winCoordinate = makeComputerWinSetPhase(matrix);\n  if (winCoordinate) return winCoordinate;\n\n  const preventCoordinate = preventPlayerFromWinningSetPhase(matrix);\n  if (preventCoordinate) return preventCoordinate;\n\n  return getRandomNullCoordinate(matrix);\n};\n\nconst hasCoordinateAdjacentTokensNotInLine = (\n  coordinateToCheck: Coordinate,\n  line: Coordinate[],\n  matrix: Matrix,\n  playerToCheck: PLAYER\n): { adjacentFields?: Set<Coordinate>; possibleWinToken?: Coordinate } => {\n  const adjacentFields = getAdjacentFields(coordinateToCheck);\n  return {\n    adjacentFields,\n    possibleWinToken: Array.from(adjacentFields).find(\n      (field) =>\n        matrix[field.x][field.y] === playerToCheck &&\n        !line.find((c) => c.x === field.x && c.y === field.y)\n    ),\n  };\n};\n\nconst makeComputerWinMovePhase = (\n  matrix: Matrix\n): MoveTurnCoordinates | undefined => {\n  const possibleWins = getPossibleWins(matrix, PLAYER.ONE);\n  if (possibleWins.length > 0) {\n    for (const { nullCoordinate, line } of possibleWins) {\n      const { possibleWinToken } = hasCoordinateAdjacentTokensNotInLine(\n        nullCoordinate,\n        line,\n        matrix,\n        PLAYER.ONE\n      );\n      if (possibleWinToken) {\n        return {\n          prevCoordinate: possibleWinToken,\n          newCoordinate: nullCoordinate,\n        };\n      }\n    }\n  }\n};\n\nconst preventPlayerFromWinningMovePhase = (\n  matrix: Matrix\n): MoveTurnCoordinates | undefined => {\n  const possibleDefeats = getPossibleWins(matrix, PLAYER.ZERO);\n  if (possibleDefeats.length > 0) {\n    for (const { nullCoordinate, line } of possibleDefeats) {\n      const { adjacentFields, possibleWinToken } =\n        hasCoordinateAdjacentTokensNotInLine(\n          nullCoordinate,\n          line,\n          matrix,\n          PLAYER.ZERO\n        );\n      if (possibleWinToken && adjacentFields) {\n        const preventDefeatToken = Array.from(adjacentFields).find(\n          (field) => matrix[field.x][field.y] === PLAYER.ONE\n        );\n        if (preventDefeatToken) {\n          return {\n            prevCoordinate: preventDefeatToken,\n            newCoordinate: nullCoordinate,\n          };\n        }\n      }\n    }\n  }\n};\n\nconst makeRandomNotDangerousMove = (matrix: Matrix): MoveTurnCoordinates => {\n  const computerTokensWithEmptyAdjacentFields = getCoordinatesWithValue(\n    matrix,\n    PLAYER.ONE\n  ).filter((coordinate) => {\n    return Array.from(getAdjacentFields(coordinate)).some(\n      ({ x, y }) => matrix[x][y] === null\n    );\n  });\n\n  const possibleTokensWithoutDangerousTokens =\n    computerTokensWithEmptyAdjacentFields.filter((coordinate) => {\n      const playerCanMoveToThisCoordinate = Array.from(\n        getAdjacentFields(coordinate)\n      ).find((field) => matrix[field.x][field.y] === PLAYER.ZERO);\n      return !(\n        coordinateHasTwoOtherValuesOfSameIdInLine(coordinate, matrix, PLAYER.ZERO) &&\n        playerCanMoveToThisCoordinate\n      );\n    });\n\n  const tokensToChooseFrom =\n    possibleTokensWithoutDangerousTokens.length < 0\n      ? possibleTokensWithoutDangerousTokens\n      : computerTokensWithEmptyAdjacentFields;\n\n  const prevCoordinate =\n    tokensToChooseFrom[Math.floor(Math.random() * tokensToChooseFrom.length)];\n\n  const emptyAdjacentFields = Array.from(\n    getAdjacentFields(prevCoordinate)\n  ).filter(({ x, y }) => matrix[x][y] === null);\n\n  const newCoordinate =\n    emptyAdjacentFields[Math.floor(Math.random() * emptyAdjacentFields.length)];\n\n  return { newCoordinate, prevCoordinate };\n};\n\nconst makeComputerWinSetPhase = (matrix: Matrix): Coordinate | undefined =>\n  getPossibleWins(matrix, PLAYER.ONE)?.[0]?.nullCoordinate;\n\nconst preventPlayerFromWinningSetPhase = (\n  matrix: Matrix\n): Coordinate | undefined => {\n  const playedTokensPlayer = matrix\n    .flatMap((rows) => rows)\n    .filter((value) => value === PLAYER.ZERO);\n  const nextTurnWillBeMove = playedTokensPlayer.length === 3;\n  if (nextTurnWillBeMove) {\n    const possibleDefeats = getPossibleWins(matrix, PLAYER.ZERO);\n    if (possibleDefeats.length > 0) {\n      for (const { nullCoordinate, line } of possibleDefeats) {\n        const { possibleWinToken } = hasCoordinateAdjacentTokensNotInLine(\n          nullCoordinate,\n          line,\n          matrix,\n          PLAYER.ZERO\n        );\n        if (possibleWinToken) {\n          return nullCoordinate;\n        }\n      }\n    }\n  } else {\n    return getPossibleWins(matrix, PLAYER.ZERO)?.[0]?.nullCoordinate;\n  }\n};\n\nconst getRandomNullCoordinate = (matrix: Matrix): Coordinate => {\n  const nullCoordinates = getCoordinatesWithValue(matrix, null);\n  return nullCoordinates[Math.floor(Math.random() * nullCoordinates.length)];\n};\n\nconst getCoordinatesWithValue = (\n  matrix: Matrix,\n  value: PLAYER | null\n): Coordinate[] => {\n  const nonNullCoordinates: Coordinate[] = [];\n  for (let x = 0; x < 3; x++) {\n    matrix[x].forEach((row, y) => {\n      if (matrix[x][y] === value) {\n        nonNullCoordinates.push({ x, y });\n      }\n    });\n  }\n  return nonNullCoordinates;\n};\n\nconst getPossibleWins = (matrix: Matrix, id: PLAYER): PossibleWin[] => {\n  const result: { nullCoordinate: Coordinate; line: Coordinate[] }[] = [];\n  // columns check\n  for (let y = 0; y < Object.values(columns).length; y++) {\n    const columnValues: (PLAYER | null)[] = Object.values(columns)[y].map(\n      ({ x: a, y: b }) => matrix[a][b]\n    );\n    if (lineHasTwoValuesOfIdAndOneNullValue(columnValues, id)) {\n      const x = columnValues.findIndex((value) => value === null);\n      result.push({\n        nullCoordinate: { x, y },\n        line: Object.values(columns)[y],\n      });\n    }\n  }\n\n  // rows check\n  for (let x = 0; x < matrix.length; x++) {\n    const rowValues = matrix[x];\n    const row: Coordinate[] = [0, 1, 2].map((y) => ({ x, y }));\n    if (lineHasTwoValuesOfIdAndOneNullValue(rowValues, id)) {\n      const y = rowValues.findIndex((value) => value === null);\n      result.push({\n        nullCoordinate: { x, y },\n        line: row,\n      });\n    }\n  }\n\n  // diagonals check\n  for (const diagonal of diagonals) {\n    const values = diagonal.map(({ x, y }) => matrix[x][y]);\n    if (lineHasTwoValuesOfIdAndOneNullValue(values, id)) {\n      result.push({\n        nullCoordinate: diagonal.find(({ x, y }) => matrix[x][y] === null)!,\n        line: diagonal,\n      });\n    }\n  }\n  return result;\n};\n\nconst lineHasTwoValuesOfIdAndOneNullValue = (\n  line: (PLAYER | null)[],\n  id: PLAYER\n): boolean => {\n  const existingValuesInLine = new Set(line);\n  const nonNullValues = line.filter((value) => value !== null);\n  return (\n    nonNullValues.length === 2 &&\n    existingValuesInLine.size === 2 &&\n    existingValuesInLine.has(id)\n  );\n};\n\nconst checkOtherValuesInLine = (\n  line: Coordinate[],\n  coordinate: Coordinate,\n  matrix: Matrix,\n  otherId: PLAYER\n): boolean => {\n  const otherValuesInLine = new Set(\n    line\n      .filter(({ x, y }) => !(coordinate.x === x && coordinate.y === y))\n      .map(({ x, y }) => matrix[x][y])\n  );\n  return otherValuesInLine.size === 1 && otherValuesInLine.has(otherId);\n};\n\nconst coordinateHasTwoOtherValuesOfSameIdInLine = (\n  coordinate: Coordinate,\n  matrix: Matrix,\n  otherId: PLAYER\n) => {\n  const column = columns[coordinate.y];\n  if (checkOtherValuesInLine(column, coordinate, matrix, otherId)) return true;\n\n  const row = [0, 1, 2].map((y) => ({ x: coordinate.x, y }));\n  if (checkOtherValuesInLine(row, coordinate, matrix, otherId)) return true;\n\n  for (const diagonal of diagonals) {\n    if (checkOtherValuesInLine(diagonal, coordinate, matrix, otherId))\n      return true;\n  }\n  return false;\n};\n","import React, { useEffect, useState } from \"react\";\nimport gameService, { Turn } from \"../../../services/gameService\";\nimport socketService from \"../../../services/socketService\";\nimport { PHASE, PLAYER, useStore } from \"../../../store/store\";\nimport styles from \"./Game.module.scss\";\nimport { Board } from \"../../elements/Board/Board\";\nimport roomService from \"../../../services/roomService\";\nimport toast from \"react-hot-toast\";\nimport { ShareInfo } from \"../ShareInfo/ShareInfo\";\nimport { StatusBox } from \"../StatusBox/StatusBox\";\nimport { PlayerInfoBox } from \"../PlayerInfoBox/PlayerInfoBox\";\nimport { Fields } from \"../Fields/Fields\";\nimport {\n  getComputerTurnInMovePhase,\n  getComputerTurnInSetPhase,\n} from \"../../../utils/computerPlayer\";\n\nexport type Coordinate = { x: number; y: number };\n\nexport const Game = (): JSX.Element => {\n  const setGameFinished = useStore((state) => state.setGameFinished);\n  const setActivePlayer = useStore((state) => state.setActivePlayer);\n  const setOpponent = useStore((state) => state.setOpponent);\n  const winner = useStore((state) => state.winner);\n  const me = useStore((state) => state.me);\n  const opponent = useStore((state) => state.opponent);\n  const gameFinished = useStore((state) => state.gameFinished);\n  const increaseScore = useStore((state) => state.increaseScore);\n  const setWinningFields = useStore((state) => state.setWinningFields);\n  const setActivated = useStore((state) => state.setActivated);\n  const activePlayer = useStore((state) => state.activePlayer);\n  const matrix = useStore((state) => state.matrix);\n  const phase = useStore((state) => state.phase);\n  const takeTurn = useStore((state) => state.takeTurn);\n  const resetActiveGameButKeepRoom = useStore(\n    (state) => state.resetActiveGameButKeepRoom\n  );\n  const [listenersAttached, setListenersAttached] = useState(false);\n\n  const reactivate = () => {\n    setActivated(true, opponent?.isComputer || false, true);\n    resetActiveGameButKeepRoom();\n    if (socketService.socket) {\n      void gameService.reactivate(socketService.socket);\n    } else {\n      toast(\"Connection Error! Please reload to start a new game.\", {\n        icon: \"❗\",\n        duration: 3000,\n      });\n    }\n  };\n\n  const handleReactivate = () => {\n    if (socketService.socket) {\n      void gameService.onReactivate(socketService.socket, () => {\n        setActivated(false, true, true);\n      });\n    }\n  };\n\n  const handleTurnFinished = () => {\n    if (socketService.socket) {\n      void gameService.onTurnFinished(socketService.socket, (turn: Turn) => {\n        takeTurn(turn);\n      });\n    }\n  };\n\n  const handleOpponentLeft = () => {\n    if (socketService.socket) {\n      void roomService.onOpponentLeft(socketService.socket, () => {\n        setOpponent(undefined);\n        toast(\"Opponent left! Start a new game by reloading the page.\", {\n          icon: \"🚪🚶\",\n          duration: 3000,\n        });\n      });\n    }\n  };\n\n  const handleOpponentJoin = () => {\n    if (socketService.socket) {\n      void roomService.onOpponentJoined(socketService.socket, (player) => {\n        setOpponent(player);\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (winner !== null) {\n      setActivePlayer(null);\n      setGameFinished(true);\n      setActivated(true, true, false);\n      increaseScore(winner);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [winner]);\n\n  useEffect(() => {\n    if (!gameFinished) {\n      setWinningFields(new Set<Coordinate>());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gameFinished]);\n\n  useEffect(() => {\n    if (\n      opponent?.isComputer &&\n      activePlayer === opponent?.id &&\n      !gameFinished\n    ) {\n      setTimeout(() => {\n        takeTurn({\n          ...(phase === PHASE.SET\n            ? {\n                newCoordinate:\n                  getComputerTurnInSetPhase(matrix),\n              }\n            : { ...getComputerTurnInMovePhase(matrix) }),\n          playerId: PLAYER.ONE,\n        });\n      }, 1000);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activePlayer, opponent?.activated]);\n\n  useEffect(() => {\n    if (!listenersAttached) {\n      handleOpponentJoin();\n      handleOpponentLeft();\n      handleTurnFinished();\n      handleReactivate();\n      setListenersAttached(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {me?.id === PLAYER.ZERO && !opponent && <ShareInfo />}\n      <div className={styles.game}>\n        <StatusBox reactivate={reactivate} />\n\n        <div className={styles.board}>\n          <Board />\n          <Fields />\n        </div>\n        <PlayerInfoBox />\n      </div>\n    </>\n  );\n};\n","import React, { ComponentProps } from \"react\";\nimport styles from \"./Input.module.scss\";\nimport classnames from \"classnames\";\n\nexport const Input = ({ ...props }: ComponentProps<\"input\">): JSX.Element => {\n  return (\n    <input {...props} className={classnames(props.className, styles.input)} />\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./Start.module.scss\";\nimport socketService from \"../../../services/socketService\";\nimport roomService from \"../../../services/roomService\";\nimport Picker, { IEmojiData } from \"emoji-picker-react\";\nimport { getRandomColor, getRandomEmoji } from \"../../../utils/helper\";\nimport { PHASE, PLAYER, Player, useStore } from \"../../../store/store\";\nimport toast from \"react-hot-toast\";\nimport { Token } from \"../../elements/Token/Token\";\nimport { Button } from \"../../elements/Button/Button\";\nimport { Input } from \"../../elements/Input/Input\";\n\nexport const Start = (): JSX.Element => {\n  const setRoom = useStore((state) => state.setRoom);\n  const setOpponent = useStore((state) => state.setOpponent);\n  const setMe = useStore((state) => state.setMe);\n  const setPhase = useStore((state) => state.setPhase);\n  const [color, setColor] = useState<string>(getRandomColor());\n  const [roomName, setRoomName] = useState(\"\");\n  const [isCreating, setIsCreating] = useState(false);\n  const [pickerOpen, setPickerOpen] = useState(false);\n  const [chosenEmoji, setChosenEmoji] = useState<string>(getRandomEmoji());\n  const queryParams = new URLSearchParams(window.location.search);\n  const id = queryParams.get(\"id\");\n\n  useEffect(() => {\n    if (id) setRoomName(id);\n    return () => {\n      setRoomName(\"\");\n    };\n  }, [id]);\n\n  const onEmojiClick = (event: React.MouseEvent, emoji: IEmojiData) => {\n    setChosenEmoji(emoji.emoji);\n    setPickerOpen(false);\n  };\n\n  const togglePicker = () => {\n    setPickerOpen(!pickerOpen);\n  };\n\n  const handleRoomNameChange = (e: React.ChangeEvent<any>) => {\n    const value = e.target.value;\n    setRoomName(value);\n  };\n\n  const start = async (playerId: PLAYER) => {\n    const socket = socketService.socket;\n    if (!socket) {\n      toast(\"Error with connection, please reload!\", {\n        icon: \"❗\",\n        duration: 3000,\n      });\n      return;\n    }\n    if (playerId === PLAYER.ONE && !roomName) {\n      toast(\"Please enter a Game ID.\", { icon: \"❗\", duration: 3000 });\n      return;\n    }\n\n    const ownPlayer: Player = {\n      symbol: chosenEmoji,\n      id: playerId,\n      color,\n      score: 0,\n      activated: true,\n      socketId: socket.id,\n    };\n\n    setIsCreating(true);\n\n    if (playerId === PLAYER.ONE) {\n      const roomInfo = await roomService\n        .joinGameRoom(socket, { player: ownPlayer, roomId: roomName })\n        .catch((err) => {\n          toast(err, { icon: \"❗\", duration: 3000 });\n        });\n      if (roomInfo) {\n        setRoom({ roomId: roomName });\n        setOpponent(roomInfo.opponent);\n        setPhase(PHASE.SET);\n      }\n    } else {\n      const roomId = await roomService\n        .createGameRoom(socket, ownPlayer)\n        .catch((err) => {\n          toast(err, { icon: \"❗\", duration: 3000 });\n        });\n      if (roomId) {\n        setRoom({ roomId });\n      }\n    }\n    setMe(ownPlayer);\n    setIsCreating(false);\n  };\n\n  return (\n    <div className={styles.centerColumn}>\n      <div className={styles.centerColumn}>\n        <Token emoji={chosenEmoji} color={color} size={7.5} />\n        <div>\n          <h3>Style your token</h3>\n          <div className={styles.buttonRow}>\n            <input\n              className={styles.styleButton}\n              type=\"color\"\n              onChange={(e) => setColor(e.target.value)}\n              value={color}\n              title=\"Change color\"\n            />\n            <button\n              className={styles.styleButton}\n              onClick={() => togglePicker()}\n              title=\"Change symbol\"\n            >\n              {chosenEmoji}\n            </button>\n            <button\n              className={styles.styleButton}\n              onClick={() => {\n                setColor(getRandomColor());\n                setChosenEmoji(getRandomEmoji());\n              }}\n              title=\"Randomize color and symbol\"\n            >\n              🔀\n            </button>\n            {pickerOpen && (\n              <Picker\n                onEmojiClick={onEmojiClick}\n                pickerStyle={{\n                  boxShadow: \"none\",\n                  borderRadius: \"0px\",\n                  position: \"absolute\",\n                  top: \"0\",\n                  marginTop: \"3rem\",\n                }}\n                disableSearchBar={true}\n                native={true}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n      <div className={styles.start}>\n        <div>\n          <Button\n            type=\"submit\"\n            disabled={isCreating}\n            onClick={() => start(PLAYER.ZERO)}\n          >\n            New Game{isCreating ? \"...\" : \"\"}\n          </Button>\n        </div>\n        <div className={styles.joinSection}>\n          <Input\n            maxLength={3}\n            placeholder=\"Game ID\"\n            value={roomName}\n            onChange={handleRoomNameChange}\n          />\n          <Button\n            onClick={() => start(PLAYER.ONE)}\n            type=\"submit\"\n            disabled={isCreating}\n          >\n            Join Game{isCreating ? \"...\" : \"\"}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styles from \"./Collapsible.module.scss\";\n\ninterface CollapsibleProps {\n  open?: boolean;\n  header: string | React.ReactNode;\n}\n\nexport const Collapsible: React.FC<CollapsibleProps> = ({\n  open,\n  children,\n  header,\n}): JSX.Element => {\n  const [isOpen, setIsOpen] = useState(open);\n  const [height, setHeight] = useState<number | undefined>(\n    open ? undefined : 0\n  );\n  const ref = useRef<HTMLDivElement>(null);\n\n  const handleFilterOpening = () => setIsOpen((prev) => !prev);\n\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver((element) =>\n      setHeight(isOpen ? element[0].contentRect.height : 0)\n    );\n    if (ref.current) {\n      resizeObserver.observe(ref.current);\n    }\n    return () => {\n      resizeObserver.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref]);\n\n  useEffect(() => {\n    setHeight(isOpen ? ref.current?.getBoundingClientRect().height : 0);\n  }, [isOpen]);\n\n  return (\n    <>\n      <div className={styles.collapsible}>\n        <div className={styles.header} onClick={handleFilterOpening}>\n          <div className={styles.title}>{header}</div>\n          <button type=\"button\" className={styles.iconButton}>\n            <div className={`${styles.icon} ${isOpen && styles.open}`}>\n              &#8249;\n            </div>\n          </button>\n        </div>\n        <div className={styles.content} style={{ height }}>\n          <div ref={ref}>\n            <div>{children}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Player, Room } from \"../../../store/store\";\nimport styles from \"./Main.module.scss\";\nimport { Game } from \"../Game/Game\";\nimport { Start } from \"../Start/Start\";\nimport { Collapsible } from \"../../elements/Collapsible/Collapsible\";\n\ninterface MainProps {\n  room?: Room;\n  me?: Player;\n}\nexport const Main = ({ room, me }: MainProps): JSX.Element => (\n  <div className={styles.main}>\n    <h1>Three Men's Morris</h1>\n    {room && me ? <Game /> : <Start />}\n    <div className={styles.howToPlay}>\n      <Collapsible header=\"How to play\">\n        <p>\n          Three men's morris is an abstract strategy game played on a three by\n          three board (counting lines) that is similar to tic-tac-toe.\n          <br />\n          The winner is the first player to align their three tokens on a line\n          drawn on the board.\n        </p>\n        <p>\n          <img\n            className={styles.screenshot}\n            src={\"/images/morris.png\"}\n            alt=\"Screenshot of game board\"\n            width=\"100%\"\n          />\n        </p>\n        <p>The game consists of two phases:</p>\n        <h3>1. Phase: Placing Tokens</h3>\n        <p>\n          The board is empty to begin the game, and players take turns placing\n          their tokens on empty intersections. Each player has three tokens.\n        </p>\n        <h3>2. Phase: Moving Tokens</h3>\n        <p>\n          Once all pieces are placed (assuming there is no winner by then), play\n          proceeds with each player moving one of their tokens per turn. A token\n          may move to any adjacent linked empty position.\n        </p>\n      </Collapsible>\n    </div>\n    <Toaster\n      toastOptions={{\n        className: styles.toast,\n        duration: 3000,\n      }}\n    />\n  </div>\n);\n","import React, { useEffect } from \"react\";\nimport socketService from \"./services/socketService\";\nimport { useStore } from \"./store/store\";\nimport { BASE_API_URL } from \"./constants/constants\";\nimport styles from \"./App.module.scss\";\nimport { Link, Route, Routes } from \"react-router-dom\";\nimport { PrivacyPolicy } from \"./routes/PrivacyPolicy\";\nimport toast from \"react-hot-toast\";\nimport { Main } from \"./components/features/Main/Main\";\n\nexport const App = (): JSX.Element => {\n  const room = useStore((state) => state.room);\n  const me = useStore((state) => state.me);\n\n  const connectSocket = async () => {\n    await socketService.connect(BASE_API_URL).catch((err) => {\n      toast(\"Error while connecting, please reload!\", {\n        icon: \"❗\",\n        duration: 3000,\n      });\n    });\n  };\n\n  useEffect(() => {\n    void connectSocket();\n  }, []);\n\n  /*const handleBeforeUnload = useCallback(\n      (e: BeforeUnloadEvent) => {\n        if (!room) return;\n        e.preventDefault();\n        const message = \"Attention, you are leaving the game! This can't be undone!\";\n        e.returnValue = message;\n        return message;\n      },\n      [room]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [room, handleBeforeUnload]);*/\n\n  return (\n    <div className={styles.container}>\n      <Routes>\n        <Route path=\"privacyPolicy\" element={<PrivacyPolicy />} />\n        <Route path=\"*\" element={<Main room={room} me={me} />} />\n      </Routes>\n      <div className={styles.footer}>\n        <Link target=\"_blank\" to=\"/privacyPolicy\">\n          Privacy Policy\n        </Link>{\" \"}\n        |<a href=\"mailto:hi@three-mens-morris.com\">Contact</a> |\n        <a href=\"https://buymeacoffee.com/maidi\">Buy me a donut</a>\n      </div>\n    </div>\n  );\n};\n","// export const BASE_API_URL = \"http://localhost:3000\"; // local\nexport const BASE_API_URL = \"\";\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"StatusBox_row__16KYh\",\"statusBox\":\"StatusBox_statusBox__xoVcY\",\"statusInfo\":\"StatusBox_statusInfo__RI06P\",\"playAgain\":\"StatusBox_playAgain__2LLWj\",\"phaseInfo\":\"StatusBox_phaseInfo__1MBc4\",\"winningText\":\"StatusBox_winningText__2mRw4\",\"pulse\":\"StatusBox_pulse__tiK-R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fields\":\"Fields_fields__239-c\",\"playedTokens\":\"Fields_playedTokens__2FaDK\",\"tokensWrapper\":\"Fields_tokensWrapper__2p_WH\",\"row\":\"Fields_row__2AqZb\",\"field\":\"Fields_field__1LGcb\",\"winningField\":\"Fields_winningField__1uXNp\",\"activeField\":\"Fields_activeField__28wGL\",\"blinker\":\"Fields_blinker__Tjloh\",\"selectedField\":\"Fields_selectedField__17RdP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centerColumn\":\"Start_centerColumn__3nOnc\",\"start\":\"Start_start__vLGMk\",\"joinSection\":\"Start_joinSection__2JieR\",\"buttonRow\":\"Start_buttonRow__25hEr\",\"styleButton\":\"Start_styleButton__1Pe8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collapsible\":\"Collapsible_collapsible__gAQDq\",\"header\":\"Collapsible_header__2dC09\",\"icon\":\"Collapsible_icon__1_LMO\",\"iconButton\":\"Collapsible_iconButton__2EtuK\",\"open\":\"Collapsible_open__3T2pJ\",\"content\":\"Collapsible_content__1eZ-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__1cebM\",\"toast\":\"Main_toast__3CD1B\",\"howToPlay\":\"Main_howToPlay__3LStO\",\"screenshot\":\"Main_screenshot__383fP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerBox\":\"Box_playerBox__m0QEU\",\"head\":\"Box_head__2mJ-F\",\"score\":\"Box_score__jVcAR\",\"nonPlayedTokens\":\"Box_nonPlayedTokens__1xI4i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"token\":\"Token_token__3nZf3\",\"emoji\":\"Token_emoji__YFkfA\",\"octagon\":\"Token_octagon__3m9vr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShareInfo_container__1zElr\",\"shareInfo\":\"ShareInfo_shareInfo__1rv9j\",\"shareButton\":\"ShareInfo_shareButton__3rzoH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"s00\":\"PlayedTokens_s00__2bsiN\",\"s01\":\"PlayedTokens_s01__1fBuM\",\"s02\":\"PlayedTokens_s02__1gPVX\",\"s10\":\"PlayedTokens_s10__2uldx\",\"s11\":\"PlayedTokens_s11__1Z8gq\",\"s12\":\"PlayedTokens_s12__2qhvA\",\"s20\":\"PlayedTokens_s20__2WnDU\",\"s21\":\"PlayedTokens_s21__3ZfT2\",\"s22\":\"PlayedTokens_s22__wNUsi\",\"token\":\"PlayedTokens_token__3OowQ\",\"tokenWrapper\":\"PlayedTokens_tokenWrapper__2ydxT\",\"appear\":\"PlayedTokens_appear__1jUiS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__rtntt\",\"footer\":\"App_footer__2i9Qe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"Game_game__BjDP_\",\"board\":\"Game_board__3x7iG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"PlayerInfoBox_row__3_kuG\",\"playerInfo\":\"PlayerInfoBox_playerInfo__1VDF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__rW9dq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__qL54J\"};"],"sourceRoot":""}