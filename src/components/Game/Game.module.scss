@use '../../theme';

@function getTransValue($pos) {
  @if ($pos == 0) {
    @return 0;
  } @else if ($pos == 1) {
    @return 50%;
  } @else if ($pos == 2) {
    @return 100%;
  }
}

@mixin sxy {
  @for $x from 0 through 2 {
    @for $y from 0 through 2 {
      $transX: getTransValue($y);
      $transY: getTransValue($x);
      .s#{$x}#{$y} {
        transform: translate3d($transX,$transY,0);
        > * {
          transform: translate3d(-$transX,-$transY,0);
        }
      }
    }
  }
}

.winningText {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  > h2 {
    position: absolute;
  }

}
.game {
  display: flex;
  justify-content: space-evenly;
  flex-wrap: wrap;
  gap: 2rem;
  width: 100%;
}

.pulse {
  animation: pulse 1s normal forwards ease-in-out;
}

.controls {
  display: flex;
  gap: 1rem;
  align-items: center;
  flex-direction: column;
  justify-content: flex-start;
  flex: 1;
  padding: 2rem;
  @media screen and (max-width: 750px) {
    flex-direction: row;
    padding: 0;
  }
  &.me {
    order: 1;
  }
  &.opponent {
    order: 3;
  }
}

.board {
  width: 50vw;
  height: 50vw;
  max-width: 650px;
  max-height: 650px;
  position: relative;
  min-width: 335px;
  min-height: 335px;
  order: 2;
  @media screen and (max-width: 750px) {
    order: 3;
  }

   > svg {
    position: absolute;
    margin: 2rem;
    * {
      stroke: theme.$colorSecondary;
      stroke-width: .5rem;
    }
  }

  .fields {
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    @include sxy;

    .stone {
      width: 100%;
      height: 100%;
      display: flex;
      position: absolute;
      align-items: flex-start;
      justify-content: flex-start;
      transition: transform 1s ease-in-out;
      pointer-events: none;
      z-index: 2;
      > * {
        transition: transform 1s ease-in-out;
      }
    }

    .row {
      display: flex;
      justify-content: space-between;

      .field {
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 1px solid #000;
        background: theme.$colorSecondary;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 0 0 0 rgba(0, 0, 0, 1);
        &:not([disabled]) {
          cursor: pointer;
        }
        &[disabled] {
          background: darken(theme.$colorSecondary,25);
          color: #000;
        }
        &.winningField {
          box-shadow: 0 0 .5rem .5rem theme.$colorTertiary;
        }
        &.activeField {
          animation: blinker 1s linear infinite;
        }
      }
    }
  }

}

@keyframes blinker {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.7);
  }

  70% {
    box-shadow: 0 0 0 1.5rem rgba(255, 255, 255, 0);
  }

  100% {
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
  }
}

@keyframes pulse {
  from {
    transform: scale3d(1, 1, 1);
  }

  50% {
    transform: scale3d(1.05, 1.05, 1.05);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}